version: '3.8'
x-app:
  &default-app
  depends_on:
    - db
  environment:
    VOTE_DBUSER: '${DB_USER}'
    VOTE_DBPASS: '${DB_PASS}'
    VOTE_DBHOST: '${DB_HOST}'
    VOTE_DBPORT: '${DB_PORT}'
    VOTE_DBPARAMS: '${DB_PARAMS}'
  networks:
    - voting-vote-net
  restart: on-failure
services:
  app:
    <<: *default-app
    build:
      context: .
      dockerfile: Dockerfile
    container_name: voting-vote-prod
    healthcheck:
      test:
        - CMD-SHELL
        - 'curl -f http://localhost:8080/ping || exit 1'
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    image: 'rfdez/voting-vote:latest'
    ports:
      - '8080:8080'
  dev-app:
    <<: *default-app
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: voting-vote-dev
    cap_add:
      - SYS_PTRACE
    image: 'rfdez/voting-vote:dev'
    ports:
      - '8080:8080'
      - '2345:2345'
    security_opt:
      - 'seccomp:unconfined'
    volumes:
      - '.:/app:rw,delegated'
  db:
    container_name: voting-vote-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${DB_USER}'
      MONGO_INITDB_ROOT_PASSWORD: '${DB_PASS}'
    expose:
      - '27017'
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo db:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    image: 'mongo:5.0'
    networks:
      - voting-vote-net
    restart: always
    volumes:
      - 'voting-poll-dbdata:/data/db'
volumes:
  voting-poll-dbdata:
    driver: local
    name: voting-poll-dbdata
networks:
  voting-vote-net:
    driver: bridge
    name: voting-vote-net
